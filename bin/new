#!/bin/bash
#
# A simple script to initialise a new project
#


function usage() {
  cat <<EOF

Make a new project workspace..

Usage:
  $0 ee ProjectName  # new Electronics101 project
  $0 pg ProjectName  # new playground project
  $0 ki ProjectName  # new Kinetics project
  $0 kr ProjectName  # new Kraft project
  $0 os ProjectName  # new OSHChip project

EOF
  exit
}

function make_project() {
  local full_project_name=$2
  local full_path="${1}/${full_project_name}"
  local parent_folder=$(dirname "$full_path")
  local project_name=$(basename "$full_path")

  mkdir -p ${parent_folder}
  mkdir ${parent_folder}/assets

  local readme_file="${parent_folder}/README.md"
  echo "making ${readme_file}"
  cat > "${readme_file}" <<EOS
# ${full_project_name}

__subtitle__

## Notes

__notes__

## Construction

![Breadboard](./assets/${project_name}_bb.jpg?raw=true)

![The Schematic](./assets/${project_name}_schematic.jpg?raw=true)

![The Build](./assets/${project_name}_build.jpg?raw=true)

## Credits and References
* [name](url)

EOS

  local catalog_file="${parent_folder}/.catalog_metadata"
  echo "making ${catalog_file}"
  cat > "${catalog_file}" <<EOS
{
    "id": "#xxx",
    "name": "${project_name}",
    "description": "enter description",
    "categories": "",
    "relative_path": "${full_path}"
}
EOS

  local ino_file="${parent_folder}/${project_name}.ino"
  echo "making ${ino_file}"
  cat > "${ino_file}" <<EOS
/*

  ${full_project_name}
  __subtitle__

  For info and circuit diagrams see https://github.com/tardate/LittleArduinoProjects/tree/master/${full_path}

 */

#define XX_PIN 13

void setup() {
  pinMode(XX_PIN, OUTPUT);
}

void loop() {
  static boolean output = HIGH;

  digitalWrite(XX_PIN, output);
  delay(500);

  output = !output;
}

EOS

  cp bin/templates/template.fzz "${parent_folder}/${project_name}.fzz"
  echo "project initialised: ${full_path}"
  open "${parent_folder}"
}


op=${1:-help}

case ${op} in

ee)
  make_project "Electronics101" "${2}"
  ;;

pg)
  make_project "playground" "${2}"
  ;;

ki)
  make_project "Kinetics" "${2}"
  ;;

kr)
  make_project "Kraft" "${2}"
  ;;

os)
  make_project "OSHChip" "${2}"
  ;;

*)
  usage
  ;;

esac
